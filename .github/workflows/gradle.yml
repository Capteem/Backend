# --------------------------추가
env:
  PROJECT_NAME: plog
  BUCKET_NAME: plog-server-bucket
  CODE_DEPLOY_APP_NAME: plog
  DEPLOYMENT_GROUP_NAME: plog-instance
# --------------------------추가

#
on:
  push:
    branches: [ "feature" ]
  pull_request:
    branches: [ "develop"]

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - uses: actions/checkout@v4
      - name: JDK 17 설정
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Gradle 설정
        uses: gradle/actions/setup-gradle@417ae3ccd767c252f5661f1ace9f835f9654f2b5 # v3.1.0
        with:
          gradle-version: '8.7'

      - name: application.properties 생성
        run: echo "${{secrets.APPLICATION_PROPERTIES}}" > src/main/resources/application.properties

      - name: gradlew 실행 권한 부여
        run: chmod +x gradlew

      - name: Gradle Wrapper로 빌드
        run: ./gradlew build
      # --------------------------추가
      - name: Make Zip File
        run: zip -qq -r ./$GITHUB_SHA.zip .
        shell: bash

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_PRIVATE_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: Upload to S3
        run: aws s3 cp --region ap-northeast-2 ./$GITHUB_SHA.zip s3://$BUCKET_NAME/$PROJECT_NAME/$GITHUB_SHA.zip

      - name: Code Deploy To EC2 instance
        run: aws deploy create-deployment
          --application-name $CODE_DEPLOY_APP_NAME
          --deployment-config-name CodeDeployDefault.AllAtOnce
          --deployment-group-name $DEPLOYMENT_GROUP_NAME
          --s3-location bucket=$BUCKET_NAME,bundleType=zip,key=$PROJECT_NAME/$GITHUB_SHA.zip
# --------------------------추가